---
- name: Configure Docker on Azure VM
  hosts: all
  become: true
  vars:
    docker_image: "{{ lookup('env', 'DOCKER_IMAGE') }}"

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Dockerâ€™s official GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set up Docker repository
      shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache again after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker engine and dependencies
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Install Docker SDK for Python (used by Ansible)
      pip:
        name: docker

    - name: Pull Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull

    - name: Run web container
      docker_container:
        name: webapp
        image: "{{ docker_image }}"
        ports:
          - "80:80"
        state: started
