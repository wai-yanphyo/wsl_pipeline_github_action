name: Azure Deployment Pipeline

on: [push]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Debug Docker image name
        run: |
          echo "Docker image will be: $DOCKER_IMAGE"
          echo "Docker username: ${{ secrets.DOCKER_USERNAME }}"
          echo "GitHub SHA: ${{ github.sha }}"
      
      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE ./app
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      
      - name: Azure Login with Retry
        run: |
          for i in {1..3}; do
            echo "Login attempt $i"
            if az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}; then
              echo "Login successful"
              break
            else
              echo "Login failed, retrying..."
              sleep 10
            fi
          done
          
          # Set subscription
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
          # Verify
          echo "Current account:"
          az account show

      - name: Write SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PUBLIC_KEY }}" > ~/.ssh/azure-container-key.pub
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/azure-container-key
          chmod 600 ~/.ssh/azure-container-key*
      
      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init
      
      - name: Terraform Plan
        run: |
          cd ./terraform
          terraform plan
        env:
          ARM_USE_CLI: true
      
      - name: Terraform Apply
        run: |
          cd ./terraform
          terraform apply -auto-approve
        env:
          ARM_USE_CLI: true
      
      - name: Get Public IP
        run: |
          cd ./terraform
          IP=$(terraform output -raw public_ip)
          echo "PUBLIC_IP=$IP" >> $GITHUB_ENV
          echo "Deployed to IP: $IP"
      
      - name: Setup Ansible
        run: sudo apt update && sudo apt install -y ansible
      
      - name: Run Ansible Playbook
        run: |
          ansible-playbook \
            -i "${PUBLIC_IP}," \
            -u azureuser \
            --private-key ~/.ssh/azure-container-key \
            -e "docker_image=${DOCKER_IMAGE}" \
            ansible/docker.yml
        env:
          DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          PUBLIC_IP: ${{ env.PUBLIC_IP }}  
          ANSIBLE_HOST_KEY_CHECKING: "False"