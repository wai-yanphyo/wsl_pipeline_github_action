name: Azure Deployment Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'terraform/**'
      - '.github/workflows/deploy.yml'

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/webapp:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE ./app

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

  provision:
    needs: build
    if: |
      contains(github.event.head_commit.message, '[infra]') ||
      github.event.head_commit.message == '' || github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      public_ip: ${{ steps.get-ip.outputs.public_ip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        run: |
          az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Write SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PUBLIC_KEY }}" > ~/.ssh/azure-container-key.pub
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/azure-container-key
          chmod 600 ~/.ssh/azure-container-key*

      - name: Terraform Init
        run: cd ./terraform && terraform init

      - name: Terraform Apply
        run: cd ./terraform && terraform apply -auto-approve

      - name: Get Public IP
        id: get-ip
        run: |
          cd ./terraform
          IP=$(terraform output -raw public_ip 2>/dev/null || echo "")
          echo "public_ip=$IP"
          echo "public_ip=$IP" >> $GITHUB_OUTPUT

  deploy:
    needs: [build, provision]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Write SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/azure-container-key
          chmod 600 ~/.ssh/azure-container-key

      - name: Run Ansible Playbook
        run: |
          echo "Connecting to ${{ needs.provision.outputs.public_ip }}"
          ansible-playbook \
            -i "${{ needs.provision.outputs.public_ip }}," \
            -u azureuser \
            --private-key ~/.ssh/azure-container-key \
            -e "docker_image=${{ env.DOCKER_IMAGE }}" \
            ansible/docker.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
